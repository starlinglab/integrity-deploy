# Env Settings (for Docker Swarm and Podman Deployment)

# Crawl Args
# =================
CRAWL_ARGS="--timeout 90 --logging stats,behaviors,debug --generateWACZ --text --workers 2 --collection thecrawl --screencastPort 9037 --sizeLimit 100000000000 --timeLimit 18000 --healthCheckPort 6065 --waitOnDone {% if browsertrix_profile_file is defined %} --profile http://minio:9000/btrix-data/profile.tar.gz {% endif %}"

# Images
# =================
CRAWLER_IMAGE=docker.io/webrecorder/browsertrix-crawler:latest

BACKEND_TAG=latest
FRONTEND_TAG=latest
REDIS_IMAGE=docker.io/library/redis:latest
AUTHSIGN_TAG=0.5.0


# mongo
# =================
MONGO_HOST=mongo
PASSWORD_SECRET={{ browsertrix_internal_password }}

MONGO_INITDB_ROOT_USERNAME=root
MONGO_INITDB_ROOT_PASSWORD={{ browsertrix_internal_password }}

# minio
# =================
MINIO_ROOT_USER=ADMIN
MINIO_ROOT_PASSWORD={{ browsertrix_minio_password }}

MINIO_BUCKET=btrix-data

# enable to use custom volume
MINIO_DATA_VOLUME=/****

MC_HOST_local=http://ADMIN:{{ browsertrix_internal_password }}@minio:9000

# Super Admin
# =================
SUPERUSER_EMAIL={{ browsertrix_admin_email }}

# if blank, a password is generated automatically
SUPERUSER_PASSWORD={{ browsertrix_admin_password }}

# Resource Limits
# =================
# all required to use limits -- set any resource to empty to disable
# cpu/memory limits

CRAWLER_REQUESTS_CPU=0.8
CRAWLER_LIMITS_CPU=1.0

CRAWLER_REQUESTS_MEMORY=800M
CRAWLER_LIMITS_MEMORY=1G


# Storage Config
# =================
STORE_ENDPOINT_URL=http://minio:9000/btrix-data/
#STORE_ACCESS_ENDPOINT_URL=https://{{ inventory_hostname }}/minio/btrix-data/
STORE_ACCESS_ENDPOINT_URL=/data/
STORE_ACCESS_KEY=ADMIN
STORE_SECRET_KEY={{ browsertrix_internal_password }}

# enable to send verification emails
{% if browsertrix_email_login is defined %}
# enable to send verification emails
EMAIL_SMTP_HOST={{ browsertrix_email_smtp | default("smtp.gmail.com") }}
EMAIL_SMTP_PORT=587
EMAIL_SENDER={{ browsertrix_email_login }}
EMAIL_PASSWORD={{ browsertrix_email_password }}
{% endif %}


REDIS_URL=redis://redis/0

# auth sign -- uncomment WACZ_SIGN_URL to enable signing
# ==================
AUTHSIGN_PORT=80

# auth sign -- uncomment to enable signing
WACZ_SIGN_URL="http://authsign:8080/sign"

# optional token for signing (useful if using remote signing server)
{% if authsign_token is defined %}
WACZ_SIGN_TOKEN="{{ authsign_token }}"
{% endif %}

REGISTRATION_ENABLED=1

# number of workers to run for backend
WEB_CONCURRENCY=4

JWT_TOKEN_LIFETIME_MINUTES=60
